{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\PROJETOS\\\\GitHub\\\\OmniStack11-BeTheHero\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nexport default function Incidents() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            console.log('response:', response.data);\n            setIncidents.apply(void 0, _toConsumableArray(incidents).concat(_toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n  useEffect(function () {\n    loadIncidents();\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }, \" \", total, \" casos\"), \".\")), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Bem-vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    data: incidents,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          navigateToDetail();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/PROJETOS/GitHub/OmniStack11-BeTheHero/mobile/src/pages/Incidents/index.js"],"names":["React","useEffect","useState","Feather","useNavigation","api","logoImg","styles","Incidents","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","incident","navigate","loadIncidents","length","get","params","response","console","log","data","headers","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;;;AAGA,OAAOC,GAAP;AAEA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,kBACEN,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACzBO,SADyB;AAAA,MACdC,YADc;;AAAA,mBAENR,QAAQ,CAAC,CAAD,CAFF;AAAA;AAAA,MAEzBS,KAFyB;AAAA,MAElBC,QAFkB;;AAAA,mBAGRV,QAAQ,CAAC,CAAD,CAHA;AAAA;AAAA,MAGzBW,IAHyB;AAAA,MAGnBC,OAHmB;;AAAA,mBAIFZ,QAAQ,CAAC,KAAD,CAJN;AAAA;AAAA,MAIzBa,OAJyB;AAAA,MAIhBC,UAJgB;;AAMhC,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;AAEA,WAASc,gBAAT,CAA0BC,QAA1B,EAAoC;AAChCF,IAAAA,UAAU,CAACG,QAAX,CAAoB,QAApB,EAA8B;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAA9B;AACH;;AAED,WAAeE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQN,OADR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAKQJ,KAAK,GAAG,CAAR,IAAaF,SAAS,CAACa,MAAV,KAAqBX,KAL1C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASIK,YAAAA,UAAU,CAAC,IAAD,CAAV;AATJ;AAAA,6CAW2BX,GAAG,CAACkB,GAAJ,CAAQ,WAAR,EAAqB;AACxCC,cAAAA,MAAM,EAAE;AAAEX,gBAAAA,IAAI,EAAJA;AAAF;AADgC,aAArB,CAX3B;;AAAA;AAWUY,YAAAA,QAXV;AAeIC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAQ,CAACG,IAAlC;AACAlB,YAAAA,YAAY,MAAZ,4BAAiBD,SAAjB,4BAAgCgB,QAAQ,CAACG,IAAzC;AACAhB,YAAAA,QAAQ,CAACa,QAAQ,CAACI,OAAT,CAAiB,eAAjB,CAAD,CAAR;AACAf,YAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAG,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBC;AAEDf,EAAAA,SAAS,CAAC,YAAM;AACboB,IAAAA,aAAa;AACf,GAFQ,CAAT;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACuB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAEvB,MAAM,CAACwB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEzB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACyB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACa,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC0B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsCtB,KAAtC,WADb,MAFJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAAC2B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDATJ,EAYI,oBAAC,QAAD;AACC,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,YADf;AAEC,IAAA,YAAY,EAAE,sBAAAjB,QAAQ;AAAA,aAAIkB,MAAM,CAAClB,QAAQ,CAACmB,EAAV,CAAV;AAAA,KAFvB;AAGC,IAAA,IAAI,EAAE7B,SAHP;AAIC,IAAA,YAAY,EAAEY,aAJf;AAKC,IAAA,qBAAqB,EAAE,GALxB;AAMC,IAAA,4BAA4B,EAAE,KAN/B;AAOC,IAAA,UAAU,EAAE;AAAA,UAAQF,QAAR,QAAEoB,IAAF;AAAA,aACT,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhC,MAAM,CAACY,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACiC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACkC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCtB,QAAQ,CAACuB,IAA7C,CAFJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnC,MAAM,CAACiC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACkC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCtB,QAAQ,CAACe,KAA7C,CALJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAACiC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACkC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,IAAI,CAACC,YAAL,CAAkB,OAAlB,EAA2B;AACxBC,QAAAA,KAAK,EAAE,UADiB;AAExBC,QAAAA,QAAQ,EAAE;AAFc,OAA3B,EAGEC,MAHF,CAGS5B,QAAQ,CAAC6B,KAHlB,CADL,CARJ,EAcI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAEzC,MAAM,CAAC0C,aADlB;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAE/B,UAAAA,gBAAgB;AAAI,SAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAAC2C,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,aAAd;AAA4B,QAAA,IAAI,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAdJ,CADS;AAAA,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAiDH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { View, FlatList, Image, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport logoImg from '../../assets/logo.png';\r\nimport styles from './styles';\r\n\r\nexport default function Incidents() {\r\n    const [incidents, setIncidents] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    function navigateToDetail(incident) {\r\n        navigation.navigate('Detail', { incident });\r\n    } \r\n\r\n    async function loadIncidents(){\r\n        if (loading) {\r\n            return; \r\n        }\r\n\r\n        if (total > 0 && incidents.length === total) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await api.get('incidents', {\r\n            params: { page, }\r\n        });\r\n\r\n        console.log('response:', response.data);\r\n        setIncidents(... incidents, ... response.data);\r\n        setTotal(response.headers['x-total-count']);\r\n        setPage(page + 1);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n       loadIncidents();\r\n    });\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View  style={styles.header}>\r\n                <Image source={logoImg} />\r\n                <Text style={styles.headerText}>\r\n                    Total de <Text style={styles.headerTextBold}> {total} casos</Text>.\r\n                </Text>\r\n            </View>\r\n\r\n            <Text style={styles.title}>Bem-vindo!</Text>\r\n            <Text style={styles.description}>Escolha um dos casos abaixo e salve o dia.</Text>\r\n\r\n\r\n            <FlatList \r\n             style={styles.incidentList}\r\n             keyExtractor={incident => String(incident.id)}\r\n             data={incidents}\r\n             onEndReached={loadIncidents}\r\n             onEndReachedThreshold={0.2}\r\n             showsVerticalScrollIndicator={false}\r\n             renderItem={({item: incident}) => (\r\n                <View style={styles.incident}>\r\n                    <Text style={styles.incidentProperty}>ONG:</Text>\r\n                    <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n                    <Text style={styles.incidentProperty}>CASO:</Text>\r\n                    <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n                    <Text style={styles.incidentProperty}>VALOR:</Text>\r\n                    <Text style={styles.incidentValue}>\r\n                        {Intl.NumberFormat('pt-BR', { \r\n                            style: 'currency', \r\n                            currency: 'BRL' \r\n                        }).format(incident.value)}</Text>\r\n\r\n                    <TouchableOpacity \r\n                        style={styles.detailsButton}\r\n                        onPress={() => { navigateToDetail() }}\r\n                    >\r\n                        <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n                        <Feather name=\"arrow-right\" size={16} color=\"#E02041\" />\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            )}\r\n            />\r\n\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}